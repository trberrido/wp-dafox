{"version":3,"file":"post-taxonomies/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAA8C;AAC0B;AACG;AAC/B;AAAA;AAE5C,MAAMW,qBAAqB,GAAGA,CAAE;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAM;EAElE,MAAMC,UAAU,GAAGR,0DAAS,CAAES,MAAM,IAAIA,MAAM,CAAE,MAAO,CAAC,CAACC,aAAa,CAAC,CAAC,EAAE,EAAG,CAAC;EAE9E,oBACCR,sDAAA,CAACL,gEAAa;IACbc,KAAK,EAAGL,UAAU,CAACM,QAAU;IAC7BC,OAAO,EAAE,CACR;MAAEC,KAAK,EAAE,EAAE;MAAEH,KAAK,EAAE;IAAE,CAAC,EACvB,GAAGH,UAAU,CAACO,GAAG,CAACH,QAAQ,KAAM;MAAEE,KAAK,EAAEF,QAAQ,CAACI,IAAI;MAAEL,KAAK,EAAEC,QAAQ,CAACK;IAAK,CAAC,CAAG,CAAC,CACjF;IACFC,QAAQ,EAAGN,QAAQ,IAAIL,aAAa,CAAE;MAAEK;IAAS,CAAE,CAAE;IACrDE,KAAK,EAAC;EAAU,CAAE,CAAC;AAEtB,CAAC;AAEc,SAASK,IAAIA,CAAE;EAAEb,UAAU;EAAEC,aAAa;EAAEa;AAAQ,CAAC,EAAG;EAEtE,MAAMC,KAAK,GAAGrB,0DAAS,CAAES,MAAM,IAC9BH,UAAU,CAACM,QAAQ,IAAIQ,OAAO,CAACE,MAAM,GACpCb,MAAM,CAAC,MAAM,CAAC,CAACc,gBAAgB,CAAE,UAAU,EAAEjB,UAAU,CAACM,QAAQ,EAAE;IAAEY,IAAI,EAAEJ,OAAO,CAACE,MAAM;IAAEG,QAAQ,EAAE,CAAC;EAAE,CAAE,CAAC,GAE3G,EAAE,EACD,CAACnB,UAAU,CAACM,QAAQ,EAAEQ,OAAO,CAACE,MAAM,CAAE,CAAC;EAEzC,oBACClB,uDAAA,CAACV,wDAAQ;IAAAgC,QAAA,gBACRxB,sDAAA,CAACJ,sEAAiB;MAAA4B,QAAA,eACjBxB,sDAAA,CAACP,wDAAK;QAAA+B,QAAA,eACLxB,sDAAA,CAACN,4DAAS;UAAC+B,WAAW,EAAG,IAAM;UAACC,KAAK,EAAC,iBAAiB;UAAAF,QAAA,eACtDxB,sDAAA,CAACG,qBAAqB;YAACC,UAAU,EAAGA,UAAY;YAACC,aAAa,EAAGA;UAAe,CAAE;QAAC,CACzE;MAAC,CACN;IAAC,GALc,UAMJ,CAAC,eACpBL,sDAAA;MAAA,GAASH,sEAAa,CAAC,CAAC;MAAA2B,QAAA,EAEtBL,KAAK,IAAIA,KAAK,CAACQ,MAAM,GACpBR,KAAK,CAACN,GAAG,CAAEe,IAAI,iBAAI5B,sDAAA;QAAAwB,QAAA,EAAsBI,IAAI,CAACd;MAAI,GAArBc,IAAI,CAACC,EAAsB,CAAC,CAAC,GAE3D;IAAE,CAEA,CAAC;EAAA,CACI,CAAC;AAEb;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;;AAEtB;AACA;AACA;AAC0B;AACU;;AAEpC;AACA;AACA;AACA;AACA;AACAC,oEAAiB,CAAEC,6CAAa,EAAE;EACjC;AACD;AACA;EACCC,IAAI,EAAEf,6CAAIA;AACX,CAAE,CAAC;;;;;;;;;;;AChCH;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEnDA;UACA;UACA;UACA;UACA","sources":["webpack://df-blocks/./src/post-taxonomies/edit.js","webpack://df-blocks/./src/post-taxonomies/index.js","webpack://df-blocks/./src/post-taxonomies/style.scss","webpack://df-blocks/external window \"ReactJSXRuntime\"","webpack://df-blocks/external window [\"wp\",\"blockEditor\"]","webpack://df-blocks/external window [\"wp\",\"blocks\"]","webpack://df-blocks/external window [\"wp\",\"components\"]","webpack://df-blocks/external window [\"wp\",\"data\"]","webpack://df-blocks/external window [\"wp\",\"element\"]","webpack://df-blocks/webpack/bootstrap","webpack://df-blocks/webpack/runtime/chunk loaded","webpack://df-blocks/webpack/runtime/compat get default export","webpack://df-blocks/webpack/runtime/define property getters","webpack://df-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://df-blocks/webpack/runtime/make namespace object","webpack://df-blocks/webpack/runtime/jsonp chunk loading","webpack://df-blocks/webpack/before-startup","webpack://df-blocks/webpack/startup","webpack://df-blocks/webpack/after-startup"],"sourcesContent":["import { Fragment } from '@wordpress/element';\nimport { Panel, PanelBody, SelectControl } from '@wordpress/components';\nimport { InspectorControls, useBlockProps } from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\n\nconst SelectControlTaxonomy = ( { attributes, setAttributes } ) => {\n\n\tconst taxonomies = useSelect( select => select( 'core' ).getTaxonomies(), [] );\n\n\treturn (\n\t\t<SelectControl\n\t\t\tvalue={ attributes.taxonomy }\n\t\t\toptions={[\n\t\t\t\t{ label: '', value: ''},\n\t\t\t\t...taxonomies.map(taxonomy => ( { label: taxonomy.name, value: taxonomy.slug } ) )\n\t\t\t]}\n\t\t\tonChange={ taxonomy => setAttributes( { taxonomy } )}\n\t\t\tlabel='Taxonomy' />\n\t);\n}\n\nexport default function Edit( { attributes, setAttributes, context } ) {\n\n\tconst terms = useSelect( select =>\n\t\tattributes.taxonomy && context.postId ?\n\t\t\tselect('core').getEntityRecords( 'taxonomy', attributes.taxonomy, { post: context.postId, per_page: -1 } )\n\t\t:\n\t\t[]\n\t, [attributes.taxonomy, context.postId] );\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<InspectorControls key='Settings'>\n\t\t\t\t<Panel>\n\t\t\t\t\t<PanelBody initialOpen={ true } title='Select taxonomy'>\n\t\t\t\t\t\t<SelectControlTaxonomy attributes={ attributes } setAttributes={ setAttributes } />\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</Panel>\n\t\t\t</InspectorControls>\n\t\t\t<ul { ...useBlockProps() }>\n\t\t\t\t{\n\t\t\t\t\tterms && terms.length ?\n\t\t\t\t\t\tterms.map( term => <li key={ term.id }>{ term.name }</li>)\n\t\t\t\t\t:\n\t\t\t\t\t''\n\t\t\t\t}\n\t\t\t</ul>\n\t\t</Fragment>\n\t);\n}","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n} );\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"post-taxonomies/index\": 0,\n\t\"post-taxonomies/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdf_blocks\"] = self[\"webpackChunkdf_blocks\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"post-taxonomies/style-index\"], () => (__webpack_require__(\"./src/post-taxonomies/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["Fragment","Panel","PanelBody","SelectControl","InspectorControls","useBlockProps","useSelect","jsx","_jsx","jsxs","_jsxs","SelectControlTaxonomy","attributes","setAttributes","taxonomies","select","getTaxonomies","value","taxonomy","options","label","map","name","slug","onChange","Edit","context","terms","postId","getEntityRecords","post","per_page","children","initialOpen","title","length","term","id","registerBlockType","metadata","edit"],"sourceRoot":""}